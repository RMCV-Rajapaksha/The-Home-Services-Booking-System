pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "chamaravishwajith644/spring-boot-app:latest"
        DOCKER_CREDENTIALS_ID = "dockerhub-credentials"
        SSH_CREDENTIALS_ID = "homemate-dev-server"
        SSH_TARGET = "ubuntu@16.170.174.241"
        DOCKER_CONTAINER = "spring-boot-app"
    }

    tools {
        maven 'Maven 3.9.9'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/RMCV-Rajapaksha/The-Home-Services-Booking-System.git'
            }
        }

        stage('Build') {
            steps {
                sh 'cd The-Home-Services-Booking-System && mvn clean package'
            }
        }

        stage('Test') {
            steps {
                script {
                    sh '''
                    echo "Running application tests"
                    cd The-Home-Services-Booking-System
                    mvn test -DskipTests=false || true
                    ls -l target/surefire-reports/
                    cat target/surefire-reports/*.xml || true
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                        sh '''
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker build -t $DOCKER_IMAGE -f The-Home-Services-Booking-System/Dockerfile The-Home-Services-Booking-System
                        docker push $DOCKER_IMAGE
                        docker logout
                        '''
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    sshagent([SSH_CREDENTIALS_ID]) {
                        sh '''
                        ssh -T -o StrictHostKeyChecking=no $SSH_TARGET <<EOF
                        echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                        docker pull $DOCKER_IMAGE
                        docker stop $DOCKER_CONTAINER || true
                        docker rm $DOCKER_CONTAINER || true
                        docker run -d --name $DOCKER_CONTAINER -p 8080:8080 $DOCKER_IMAGE
                        docker logout
                        EOF
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            junit 'The-Home-Services-Booking-System/target/surefire-reports/TEST-*.xml'
            plot csvFileName: 'test-duration.csv',
                 title: 'Test Execution Time',
                 group: 'Test Metrics',
                 style: 'line'
            cleanWs()
        }

        success {
            emailext(
                to: 'sch.chamara@gmail.com',
                subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                <p>Good news! The job <b>${env.JOB_NAME}</b> build <b>${env.BUILD_NUMBER}</b> succeeded.</p>
                """,
                replyTo: 'sch.chamara@gmail.com',
                from: 'sch.chamara@gmail.com'
            )
        }

        failure {
            emailext(
                to: 'sch.chamara@gmail.com',
                subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                body: """
                <p>Unfortunately, the job <b>${env.JOB_NAME}</b> build <b>${env.BUILD_NUMBER}</b> failed.</p>
                """,
                replyTo: 'sch.chamara@gmail.com',
                from: 'sch.chamara@gmail.com'
            )
        }
    }
}
